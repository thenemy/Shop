<?php

namespace App\Domain\Product\HeaderText\Front\Dynamic;

use App\Domain\Core\Front\Admin\CustomTable\Attributes\Abstracts\DynamicAttributes;
use App\Domain\Core\Front\Admin\CustomTable\Traits\TableDynamic;
use App\Domain\Product\HeaderText\Services\HeaderKeyValueService;
use Illuminate\Database\Eloquent\Builder;

class HeaderKeyValueDynamic extends HeaderKeyValueDynamicWithoutEntity
{
    use TableDynamic;


    public function newFromBuilder($attributes = [], $connection = null)
    {
        $modal = parent::newFromBuilder($attributes, $connection);
        $modal->setInitial();
        return $modal;
    }

    protected function performUpdate(Builder $query)
    {
        $object['key'] = $this->attributes['key'];
        $object['value'] = $this->attributes['value'];
        $this->attributes = $object;
        return parent::performUpdate($query); // TODO: Change the autogenerated stub
    }

    public function setInitial()
    {
        $this->attributes['key_ru'] = $this->getKeyAttribute()['ru'];
        $this->attributes['key_en'] = $this->getKeyAttribute()['en'];
        $this->attributes['key_uz'] = $this->getKeyAttribute()['uz'];
        $this->attributes['value_ru'] = $this->getValueAttribute()['ru'];
        $this->attributes['value_en'] = $this->getValueAttribute()['en']
            ?? $attributes["value_en"] ?? "";
        $this->attributes['value_uz'] = $this->getValueAttribute()['uz']
            ?? $attributes["value_uz"] ?? "";
    }

    public static function getCustomRules(): array
    {
        return [
            'key_ru' => DynamicAttributes::INPUT,
            "key_uz" => DynamicAttributes::INPUT,
            "key_en" => DynamicAttributes::INPUT,
            'value_ru' => DynamicAttributes::INPUT,
            "value_uz" => DynamicAttributes::INPUT,
            "value_en" => DynamicAttributes::INPUT,
        ];
    }


    public function attributesToArray()
    {

        return $this->attributes;
    }

    public function getCustomFrontRules(): array
    {
        return [
            'key_ru' => null,
            "key_uz" => null,
            "key_en" => null,
            'value_ru' => null,
            "value_uz" => null,
            "value_en" => null,
        ];
    }

    public static function getBaseService(): string
    {
        return HeaderKeyValueService::class;
    }

    public static function getDynamicParentKey(): string
    {
        return "header_product_id";
    }

    public function generateAdditionalToHtml(): array
    {
        return [
            'index',
            "wire:key" => 'index ."header_edit_dynamic"'
        ];
    }
}
